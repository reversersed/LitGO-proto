syntax = "proto3";
package books;
option go_package = "github.com/reversersed/LitGO-proto/gen/go/books;books_pb";

//go:generate mockgen -source=book_service_grpc.pb.go -destination=./mocks/book_service_mock.go
service Book {
    rpc FindBook(FindBookRequest) returns (FindBookResponse);
    rpc CreateBook(CreateBookRequest) returns (CreateBookResponse);
    rpc GetBook(GetBookRequest) returns (GetBookResponse);
}
//Requests
message FindBookRequest {
    // query to find
    string query = 1; // @gotags: form:"query" validate:"required"
    // max objects to find
    int32 limit = 2; // @gotags: form:"limit" validate:"required,gte=1,lte=50"
    // page to find
    int32 page = 3; // @gotags: form:"page" validate:"gte=0"
    // minimum rating to find
    float rating = 4; // @gotags: form:"rating" validate:"gte=0,lte=5"
}
message CreateBookRequest {
    // book name, required, 4 <= length <= 64
    string name = 1; // @gotags: validate:"required,min=4,max=64" form:"Name"
    // description, required, 16 <= length <= 1024
    string description = 2; // @gotags: validate:"required,min=16,max=1024" form:"Description"
    // picture path, required
    string picture = 3; // @gotags: validate:"required" swaggerignore:"true"
    // file path, required
    string filepath = 4; // @gotags: validate:"required" swaggerignore:"true"
    // genre primitive id, required
    string genre = 5; // @gotags: validate:"required,primitiveid" form:"Genre"
    // authors primitive id, at least one required
    repeated string authors = 6; // @gotags: validate:"required,primitiveid" form:"Authors"
    int32 price = 7; // @gotags: validate:"required,min=0" form:"Price"
}
message GetBookRequest {
    // book's translit name or id to find
    string query = 1; // @gotags: form:"query" validate:"required"
}
//Responses
message FindBookResponse {
    repeated BookModel books = 1;
}
message CreateBookResponse {
    BookModel book = 1;
}
message GetBookResponse {
    BookModel book = 1;
}
//Models
message Empty {}
message BookModel {
    string id = 1;
    string name = 2;
    string translitname = 3;
    string description = 4;
    string picture = 5;
    string filepath = 6;
    repeated AuthorModel authors = 7;
    CategoryModel category = 8;
    GenreModel genre = 9;
    float rating = 10;
    int32 reviews = 11;
    int32 price = 12;
    int64 published = 13;
}
message AuthorModel {
    string id = 1;
    string name = 2;
    string translitname = 3;
    string profilepicture = 4;
}
message CategoryModel {
    string id = 1;
    string name = 2;
    string translitname = 3;
}
message GenreModel {
    string id = 1;
    string name = 2;
    string translitname = 3;
}