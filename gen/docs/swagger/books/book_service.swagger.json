{
  "swagger": "2.0",
  "info": {
    "title": "books/book_service.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "Book"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/book": {
      "get": {
        "summary": "Get book by id",
        "description": "Gets book by id or translit name",
        "operationId": "Book_GetBook",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/booksGetBookResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "query",
            "description": "book's translit name or id to find\n\n@gotags: form:\"query\" validate:\"required\"",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Book"
        ]
      },
      "post": {
        "summary": "Create book",
        "description": "Create new book. Accessible only for authorized users with admin rights.",
        "operationId": "Book_CreateBook",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/booksCreateBookResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/booksCreateBookRequest"
            }
          }
        ],
        "tags": [
          "Book"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/book/find": {
      "get": {
        "summary": "Find book by query",
        "description": "Searches books by query with pagination",
        "operationId": "Book_FindBook",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/booksFindBookResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "query",
            "description": "query to find\n\n@gotags: form:\"query\" validate:\"max=128\"",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "max objects to find\n\n@gotags: form:\"limit\" validate:\"required,gte=1,lte=50\"",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page",
            "description": "page to find\n\n@gotags: form:\"page\" validate:\"gte=0\"",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "rating",
            "description": "minimum rating to find\n\n@gotags: form:\"rating\" validate:\"gte=0,lte=5\"",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "float"
          },
          {
            "name": "sorttype",
            "description": "@gotags: form:\"sorttype\" validate:\"oneof=Popular Newest\"",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Book"
        ]
      }
    },
    "/api/v1/book/genre": {
      "get": {
        "summary": "Get book by genre",
        "description": "Gets book by genre id or translit name with pagination",
        "operationId": "Book_GetBookByGenre",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/booksGetBookByGenreResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "query",
            "description": "Query can be translit name or genre id\n\n@gotags: form:\"query\" validate:\"required\"",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sorttype",
            "description": "@gotags: form:\"sorttype\" validate:\"oneof=Popular Newest\"",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "onlyhighrating",
            "description": "@gotags: form:\"onlyhighrating\"",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "limit",
            "description": "@gotags: form:\"limit\" validate:\"gte=1,lte=50\"",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page",
            "description": "@gotags: form:\"page\" validate:\"gte=0\"",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Book"
        ]
      }
    },
    "/api/v1/book/list": {
      "get": {
        "summary": "Find authors list",
        "description": "Get authors by query with pagination",
        "operationId": "Book_GetBookList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/booksGetBookListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "array of authors id to find\n\n@gotags: form:\"id\" validate:\"primitiveid,required_without_all=Translit\"",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "translit",
            "description": "array of translit names to find\n\n@gotags: form:\"translit\" validate:\"required_without_all=Id\"",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Book"
        ]
      }
    }
  },
  "definitions": {
    "authorsAuthorModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "translitname": {
          "type": "string"
        },
        "profilepicture": {
          "type": "string"
        },
        "about": {
          "type": "string"
        },
        "rating": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "booksBookModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "translitname": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "picture": {
          "type": "string"
        },
        "filepath": {
          "type": "string"
        },
        "authors": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/authorsAuthorModel"
          }
        },
        "category": {
          "$ref": "#/definitions/genresCategoryModel"
        },
        "genre": {
          "$ref": "#/definitions/genresGenreModel"
        },
        "rating": {
          "type": "number",
          "format": "float"
        },
        "reviews": {
          "type": "integer",
          "format": "int32"
        },
        "price": {
          "type": "integer",
          "format": "int32"
        },
        "published": {
          "type": "string",
          "format": "int64"
        },
        "written": {
          "type": "integer",
          "format": "int32"
        },
        "pages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Models"
    },
    "booksCreateBookRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "@gotags: validate:\"required,min=4,max=64\" form:\"Name\"",
          "title": "book name, required, 4 \u003c= length \u003c= 64"
        },
        "description": {
          "type": "string",
          "description": "@gotags: validate:\"required,min=16,max=1024\" form:\"Description\"",
          "title": "description, required, 16 \u003c= length \u003c= 1024"
        },
        "picture": {
          "type": "string",
          "format": "byte",
          "description": "@gotags: validate:\"required\" form:\"Picture\"",
          "title": "picture file, required"
        },
        "filepath": {
          "type": "string",
          "format": "byte",
          "description": "@gotags: validate:\"required\" form:\"Book\"",
          "title": "book file, required"
        },
        "genre": {
          "type": "string",
          "description": "@gotags: validate:\"required,primitiveid\" form:\"Genre\"",
          "title": "genre primitive id, required"
        },
        "authors": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "@gotags: validate:\"required,primitiveid\" form:\"Authors\"",
          "title": "authors primitive id, at least one required"
        },
        "price": {
          "type": "integer",
          "format": "int32",
          "title": "@gotags: validate:\"required,gte=0\" form:\"Price\""
        }
      }
    },
    "booksCreateBookResponse": {
      "type": "object",
      "properties": {
        "book": {
          "$ref": "#/definitions/booksBookModel"
        }
      }
    },
    "booksFindBookResponse": {
      "type": "object",
      "properties": {
        "books": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/booksBookModel"
          }
        }
      },
      "title": "Responses"
    },
    "booksGetBookByGenreResponse": {
      "type": "object",
      "properties": {
        "books": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/booksBookModel"
          }
        }
      }
    },
    "booksGetBookListResponse": {
      "type": "object",
      "properties": {
        "books": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/booksBookModel"
          }
        }
      }
    },
    "booksGetBookResponse": {
      "type": "object",
      "properties": {
        "book": {
          "$ref": "#/definitions/booksBookModel"
        }
      }
    },
    "genresCategoryModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "translitname": {
          "type": "string"
        },
        "genres": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/genresGenreModel"
          }
        }
      },
      "title": "Models"
    },
    "genresGenreModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "translitname": {
          "type": "string"
        },
        "bookcount": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
