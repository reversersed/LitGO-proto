{
  "swagger": "2.0",
  "info": {
    "title": "authors/author_service.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "Author"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/authors": {
      "get": {
        "summary": "Find authors",
        "description": "Get authors by id or translit name. Can be multiple",
        "operationId": "Author_GetAuthors",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/authorsGetAuthorsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "array of authors id to find\n\n@gotags: form:\"id\" validate:\"primitiveid,required_without_all=Translit\"",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "translit",
            "description": "array of translit names to find\n\n@gotags: form:\"translit\" validate:\"required_without_all=Id\"",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Author"
        ]
      }
    },
    "/api/v1/authors/list": {
      "get": {
        "summary": "Find authors list",
        "description": "Get authors by query with pagination",
        "operationId": "Author_FindAuthors",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/authorsGetAuthorsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "query",
            "description": "query to find\n\n@gotags: form:\"query\" validate:\"required\"",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "max objects to find\n\n@gotags: form:\"limit\" validate:\"required,gte=1,lte=50\"",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page",
            "description": "page to find\n\n@gotags: form:\"page\" validate:\"gte=0\"",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "rating",
            "description": "rating to find\n\n@gotags: form:\"rating\" validate:\"gte=0,lte=5\"",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "float"
          }
        ],
        "tags": [
          "Author"
        ]
      }
    }
  },
  "definitions": {
    "authorsAuthorModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "translitname": {
          "type": "string"
        },
        "profilepicture": {
          "type": "string"
        },
        "about": {
          "type": "string"
        },
        "rating": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "authorsGetAuthorsResponse": {
      "type": "object",
      "properties": {
        "authors": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/authorsAuthorModel"
          }
        }
      },
      "title": "Responses"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
