{
  "swagger": "2.0",
  "info": {
    "title": "files/file_service.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "File"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/files/author": {
      "get": {
        "summary": "Get's authors cover's file",
        "description": "Returns file's bytes if there is one",
        "operationId": "File_GetAuthorCover",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/filesFileResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "fileName",
            "description": "@gotags: validate:\"required\" example:\"bible-231125.epub\"\n\nName of file to find with extension",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "File"
        ]
      }
    },
    "/api/v1/files/book": {
      "get": {
        "summary": "Get's book's epub file",
        "description": "Returns file's bytes if there is one",
        "operationId": "File_GetBookFile",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/filesFileResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "fileName",
            "description": "@gotags: validate:\"required\" example:\"bible-231125.epub\"\n\nName of file to find with extension",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "File"
        ]
      }
    },
    "/api/v1/files/cover": {
      "get": {
        "summary": "Get's book cover's file",
        "description": "Returns file's bytes if there is one",
        "operationId": "File_GetBookCover",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/filesFileResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "fileName",
            "description": "@gotags: validate:\"required\" example:\"bible-231125.epub\"\n\nName of file to find with extension",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "File"
        ]
      }
    }
  },
  "definitions": {
    "filesFileResponse": {
      "type": "object",
      "properties": {
        "file": {
          "type": "string",
          "format": "byte"
        },
        "mimetype": {
          "type": "string"
        }
      },
      "title": "Responses"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "bearer": {
      "type": "apiKey",
      "description": "Authentication token, prefixed by Bearer: Bearer \u003ctoken\u003e",
      "name": "Authorization",
      "in": "header"
    }
  }
}
