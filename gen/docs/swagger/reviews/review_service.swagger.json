{
  "swagger": "2.0",
  "info": {
    "title": "reviews/review_service.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "Review"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/review/book": {
      "post": {
        "summary": "Adds new review to book",
        "operationId": "Review_CreateBookReview",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/reviewsCreateBookReviewResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/reviewsCreateBookReviewRequest"
            }
          }
        ],
        "tags": [
          "Review"
        ]
      }
    },
    "/api/v1/review/{bookId}/{replyId}/reply": {
      "post": {
        "summary": "Adds new review to book",
        "operationId": "Review_CreateReviewReply",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/reviewsCreateReplyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "bookId",
            "description": "@gotags: form:\"bookId\" validate:\"required,primitiveid\"",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "replyId",
            "description": "@gotags: form:\"replyId\" validate:\"required,primitiveid\"",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReviewCreateReviewReplyBody"
            }
          }
        ],
        "tags": [
          "Review"
        ]
      }
    },
    "/api/v1/review/{id}": {
      "get": {
        "summary": "Get reviews of book with provided {id}",
        "operationId": "Review_GetBookReviews",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/reviewsGetBookReviewsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Book ID to search reviews of\n\n@gotags: form:\"id\" validate:\"required,primitiveid\"",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page number to search\n\n@gotags: form:\"page\" validate:\"gte=0\"",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "description": "Reviews count per page\n\n@gotags: form:\"pagesize\" validate:\"gte=1\"",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Review"
        ]
      }
    },
    "/api/v1/review/{id}/user": {
      "get": {
        "summary": "Gets current user's review",
        "operationId": "Review_GetCurrentUserBookReview",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/reviewsGetCurrentUserReviewResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "@gotags: form:\"id\" validate:\"required,primitiveid\"",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Review"
        ]
      }
    }
  },
  "definitions": {
    "ReviewCreateReviewReplyBody": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "title": "@gotags: form:\"text\" validate:\"required\""
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "reviewsCreateBookReviewRequest": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "title": "@gotags: form:\"Id\" validate:\"required\""
        },
        "rating": {
          "type": "number",
          "format": "float",
          "title": "@gotags: form:\"Rating\" validate:\"required,gte=0,lte=5\""
        },
        "bookId": {
          "type": "string",
          "title": "@gotags: form:\"BookId\" validate:\"required,primitiveid\""
        }
      }
    },
    "reviewsCreateBookReviewResponse": {
      "type": "object",
      "properties": {
        "review": {
          "$ref": "#/definitions/reviewsReviewModel"
        }
      }
    },
    "reviewsCreateReplyResponse": {
      "type": "object",
      "properties": {
        "review": {
          "$ref": "#/definitions/reviewsReviewModel"
        }
      }
    },
    "reviewsGetBookReviewsResponse": {
      "type": "object",
      "properties": {
        "reviews": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/reviewsReviewModel"
          }
        }
      },
      "title": "Responses"
    },
    "reviewsGetCurrentUserReviewResponse": {
      "type": "object",
      "properties": {
        "review": {
          "$ref": "#/definitions/reviewsReviewModel"
        }
      }
    },
    "reviewsReviewModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "int64"
        },
        "creator": {
          "$ref": "#/definitions/reviewsUserModel"
        },
        "rating": {
          "type": "number",
          "format": "float"
        },
        "replies": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/reviewsReviewReplyModel"
          }
        }
      },
      "title": "Models"
    },
    "reviewsReviewReplyModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "int64"
        },
        "creator": {
          "$ref": "#/definitions/reviewsUserModel"
        }
      }
    },
    "reviewsUserModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "login": {
          "type": "string"
        }
      }
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
