// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v4.23.4
// source: books/book_service.proto

package books_pb

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	authors "github.com/reversersed/LitGO-proto/gen/go/authors"
	genres "github.com/reversersed/LitGO-proto/gen/go/genres"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Requests
type GetBookListRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// array of authors id to find
	Id []string `protobuf:"bytes,1,rep,name=id,proto3" json:"id,omitempty" form:"id" validate:"primitiveid,required_without_all=Translit"`  
	// array of translit names to find
	Translit      []string `protobuf:"bytes,2,rep,name=translit,proto3" json:"translit,omitempty" form:"translit" validate:"required_without_all=Id"`  
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBookListRequest) Reset() {
	*x = GetBookListRequest{}
	mi := &file_books_book_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBookListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBookListRequest) ProtoMessage() {}

func (x *GetBookListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_books_book_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBookListRequest.ProtoReflect.Descriptor instead.
func (*GetBookListRequest) Descriptor() ([]byte, []int) {
	return file_books_book_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetBookListRequest) GetId() []string {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *GetBookListRequest) GetTranslit() []string {
	if x != nil {
		return x.Translit
	}
	return nil
}

type FindBookRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// query to find
	Query string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty" form:"query" validate:"max=128"`  
	// max objects to find
	Limit int32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty" form:"limit" validate:"required,gte=1,lte=50"`  
	// page to find
	Page int32 `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty" form:"page" validate:"gte=0"`  
	// minimum rating to find
	Rating        float32 `protobuf:"fixed32,4,opt,name=rating,proto3" json:"rating,omitempty" form:"rating" validate:"gte=0,lte=5"`    
	Sorttype      string  `protobuf:"bytes,5,opt,name=sorttype,proto3" json:"sorttype,omitempty" form:"sorttype" validate:"oneof=Popular Newest"`  
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindBookRequest) Reset() {
	*x = FindBookRequest{}
	mi := &file_books_book_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindBookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindBookRequest) ProtoMessage() {}

func (x *FindBookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_books_book_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindBookRequest.ProtoReflect.Descriptor instead.
func (*FindBookRequest) Descriptor() ([]byte, []int) {
	return file_books_book_service_proto_rawDescGZIP(), []int{1}
}

func (x *FindBookRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *FindBookRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *FindBookRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FindBookRequest) GetRating() float32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *FindBookRequest) GetSorttype() string {
	if x != nil {
		return x.Sorttype
	}
	return ""
}

type CreateBookRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// book name, required, 4 <= length <= 64
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" validate:"required,min=4,max=64" form:"Name"`  
	// description, required, 16 <= length <= 1024
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty" validate:"required,min=16,max=1024" form:"Description"`  
	// picture file, required
	Picture []byte `protobuf:"bytes,3,opt,name=picture,proto3" json:"picture,omitempty" validate:"required" form:"Picture"`  
	// book file, required
	Filepath []byte `protobuf:"bytes,4,opt,name=filepath,proto3" json:"filepath,omitempty" validate:"required" form:"Book"`  
	// genre primitive id, required
	Genre string `protobuf:"bytes,5,opt,name=genre,proto3" json:"genre,omitempty" validate:"required,primitiveid" form:"Genre"`  
	// authors primitive id, at least one required
	Authors       []string `protobuf:"bytes,6,rep,name=authors,proto3" json:"authors,omitempty" validate:"required,primitiveid" form:"Authors"`  
	Price         int32    `protobuf:"varint,7,opt,name=price,proto3" json:"price,omitempty" validate:"required,gte=0" form:"Price"`     
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateBookRequest) Reset() {
	*x = CreateBookRequest{}
	mi := &file_books_book_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBookRequest) ProtoMessage() {}

func (x *CreateBookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_books_book_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBookRequest.ProtoReflect.Descriptor instead.
func (*CreateBookRequest) Descriptor() ([]byte, []int) {
	return file_books_book_service_proto_rawDescGZIP(), []int{2}
}

func (x *CreateBookRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateBookRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateBookRequest) GetPicture() []byte {
	if x != nil {
		return x.Picture
	}
	return nil
}

func (x *CreateBookRequest) GetFilepath() []byte {
	if x != nil {
		return x.Filepath
	}
	return nil
}

func (x *CreateBookRequest) GetGenre() string {
	if x != nil {
		return x.Genre
	}
	return ""
}

func (x *CreateBookRequest) GetAuthors() []string {
	if x != nil {
		return x.Authors
	}
	return nil
}

func (x *CreateBookRequest) GetPrice() int32 {
	if x != nil {
		return x.Price
	}
	return 0
}

type GetBookRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// book's translit name or id to find
	Query         string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty" form:"query" validate:"required"`  
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBookRequest) Reset() {
	*x = GetBookRequest{}
	mi := &file_books_book_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBookRequest) ProtoMessage() {}

func (x *GetBookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_books_book_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBookRequest.ProtoReflect.Descriptor instead.
func (*GetBookRequest) Descriptor() ([]byte, []int) {
	return file_books_book_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetBookRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type GetBookByGenreRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Query can be translit name or genre id
	Query          string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty" form:"query" validate:"required"`                     
	Sorttype       string `protobuf:"bytes,2,opt,name=sorttype,proto3" json:"sorttype,omitempty" form:"sorttype" validate:"oneof=Popular Newest"`               
	Onlyhighrating bool   `protobuf:"varint,3,opt,name=onlyhighrating,proto3" json:"onlyhighrating,omitempty" form:"onlyhighrating"`  
	Limit          int32  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty" form:"limit" validate:"gte=1,lte=50"`                    
	Page           int32  `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty" form:"page" validate:"gte=0"`                      
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetBookByGenreRequest) Reset() {
	*x = GetBookByGenreRequest{}
	mi := &file_books_book_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBookByGenreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBookByGenreRequest) ProtoMessage() {}

func (x *GetBookByGenreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_books_book_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBookByGenreRequest.ProtoReflect.Descriptor instead.
func (*GetBookByGenreRequest) Descriptor() ([]byte, []int) {
	return file_books_book_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetBookByGenreRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *GetBookByGenreRequest) GetSorttype() string {
	if x != nil {
		return x.Sorttype
	}
	return ""
}

func (x *GetBookByGenreRequest) GetOnlyhighrating() bool {
	if x != nil {
		return x.Onlyhighrating
	}
	return false
}

func (x *GetBookByGenreRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetBookByGenreRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

// Responses
type FindBookResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Books         []*BookModel           `protobuf:"bytes,1,rep,name=books,proto3" json:"books,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindBookResponse) Reset() {
	*x = FindBookResponse{}
	mi := &file_books_book_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindBookResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindBookResponse) ProtoMessage() {}

func (x *FindBookResponse) ProtoReflect() protoreflect.Message {
	mi := &file_books_book_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindBookResponse.ProtoReflect.Descriptor instead.
func (*FindBookResponse) Descriptor() ([]byte, []int) {
	return file_books_book_service_proto_rawDescGZIP(), []int{5}
}

func (x *FindBookResponse) GetBooks() []*BookModel {
	if x != nil {
		return x.Books
	}
	return nil
}

type GetBookListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Books         []*BookModel           `protobuf:"bytes,1,rep,name=books,proto3" json:"books,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBookListResponse) Reset() {
	*x = GetBookListResponse{}
	mi := &file_books_book_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBookListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBookListResponse) ProtoMessage() {}

func (x *GetBookListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_books_book_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBookListResponse.ProtoReflect.Descriptor instead.
func (*GetBookListResponse) Descriptor() ([]byte, []int) {
	return file_books_book_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetBookListResponse) GetBooks() []*BookModel {
	if x != nil {
		return x.Books
	}
	return nil
}

type CreateBookResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Book          *BookModel             `protobuf:"bytes,1,opt,name=book,proto3" json:"book,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateBookResponse) Reset() {
	*x = CreateBookResponse{}
	mi := &file_books_book_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBookResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBookResponse) ProtoMessage() {}

func (x *CreateBookResponse) ProtoReflect() protoreflect.Message {
	mi := &file_books_book_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBookResponse.ProtoReflect.Descriptor instead.
func (*CreateBookResponse) Descriptor() ([]byte, []int) {
	return file_books_book_service_proto_rawDescGZIP(), []int{7}
}

func (x *CreateBookResponse) GetBook() *BookModel {
	if x != nil {
		return x.Book
	}
	return nil
}

type GetBookResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Book          *BookModel             `protobuf:"bytes,1,opt,name=book,proto3" json:"book,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBookResponse) Reset() {
	*x = GetBookResponse{}
	mi := &file_books_book_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBookResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBookResponse) ProtoMessage() {}

func (x *GetBookResponse) ProtoReflect() protoreflect.Message {
	mi := &file_books_book_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBookResponse.ProtoReflect.Descriptor instead.
func (*GetBookResponse) Descriptor() ([]byte, []int) {
	return file_books_book_service_proto_rawDescGZIP(), []int{8}
}

func (x *GetBookResponse) GetBook() *BookModel {
	if x != nil {
		return x.Book
	}
	return nil
}

type GetBookByGenreResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Books         []*BookModel           `protobuf:"bytes,1,rep,name=books,proto3" json:"books,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBookByGenreResponse) Reset() {
	*x = GetBookByGenreResponse{}
	mi := &file_books_book_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBookByGenreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBookByGenreResponse) ProtoMessage() {}

func (x *GetBookByGenreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_books_book_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBookByGenreResponse.ProtoReflect.Descriptor instead.
func (*GetBookByGenreResponse) Descriptor() ([]byte, []int) {
	return file_books_book_service_proto_rawDescGZIP(), []int{9}
}

func (x *GetBookByGenreResponse) GetBooks() []*BookModel {
	if x != nil {
		return x.Books
	}
	return nil
}

// Models
type BookModel struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Translitname  string                 `protobuf:"bytes,3,opt,name=translitname,proto3" json:"translitname,omitempty"`
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Picture       string                 `protobuf:"bytes,5,opt,name=picture,proto3" json:"picture,omitempty"`
	Filepath      string                 `protobuf:"bytes,6,opt,name=filepath,proto3" json:"filepath,omitempty"`
	Authors       []*authors.AuthorModel `protobuf:"bytes,7,rep,name=authors,proto3" json:"authors,omitempty"`
	Category      *genres.CategoryModel  `protobuf:"bytes,8,opt,name=category,proto3" json:"category,omitempty"`
	Genre         *genres.GenreModel     `protobuf:"bytes,9,opt,name=genre,proto3" json:"genre,omitempty"`
	Rating        float32                `protobuf:"fixed32,10,opt,name=rating,proto3" json:"rating,omitempty"`
	Reviews       int32                  `protobuf:"varint,11,opt,name=reviews,proto3" json:"reviews,omitempty"`
	Price         int32                  `protobuf:"varint,12,opt,name=price,proto3" json:"price,omitempty"`
	Published     int64                  `protobuf:"varint,13,opt,name=published,proto3" json:"published,omitempty"`
	Written       int32                  `protobuf:"varint,14,opt,name=written,proto3" json:"written,omitempty"`
	Pages         int32                  `protobuf:"varint,15,opt,name=pages,proto3" json:"pages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BookModel) Reset() {
	*x = BookModel{}
	mi := &file_books_book_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BookModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookModel) ProtoMessage() {}

func (x *BookModel) ProtoReflect() protoreflect.Message {
	mi := &file_books_book_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookModel.ProtoReflect.Descriptor instead.
func (*BookModel) Descriptor() ([]byte, []int) {
	return file_books_book_service_proto_rawDescGZIP(), []int{10}
}

func (x *BookModel) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BookModel) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BookModel) GetTranslitname() string {
	if x != nil {
		return x.Translitname
	}
	return ""
}

func (x *BookModel) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *BookModel) GetPicture() string {
	if x != nil {
		return x.Picture
	}
	return ""
}

func (x *BookModel) GetFilepath() string {
	if x != nil {
		return x.Filepath
	}
	return ""
}

func (x *BookModel) GetAuthors() []*authors.AuthorModel {
	if x != nil {
		return x.Authors
	}
	return nil
}

func (x *BookModel) GetCategory() *genres.CategoryModel {
	if x != nil {
		return x.Category
	}
	return nil
}

func (x *BookModel) GetGenre() *genres.GenreModel {
	if x != nil {
		return x.Genre
	}
	return nil
}

func (x *BookModel) GetRating() float32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *BookModel) GetReviews() int32 {
	if x != nil {
		return x.Reviews
	}
	return 0
}

func (x *BookModel) GetPrice() int32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *BookModel) GetPublished() int64 {
	if x != nil {
		return x.Published
	}
	return 0
}

func (x *BookModel) GetWritten() int32 {
	if x != nil {
		return x.Written
	}
	return 0
}

func (x *BookModel) GetPages() int32 {
	if x != nil {
		return x.Pages
	}
	return 0
}

var File_books_book_service_proto protoreflect.FileDescriptor

var file_books_book_service_proto_rawDesc = string([]byte{
	0x0a, 0x18, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x2f, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x62, 0x6f, 0x6f, 0x6b,
	0x73, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70,
	0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1a, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x73, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x40, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x42, 0x6f, 0x6f, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x69, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x69, 0x74, 0x22, 0x85, 0x01, 0x0a, 0x0f,
	0x46, 0x69, 0x6e, 0x64, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x6f, 0x72, 0x74, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6f, 0x72, 0x74, 0x74,
	0x79, 0x70, 0x65, 0x22, 0xc5, 0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x6f,
	0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x18, 0x0a, 0x07, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x07, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x70, 0x61, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0x26, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x22, 0x9b, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x42,
	0x79, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x6f, 0x72, 0x74, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6f, 0x72, 0x74, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x26, 0x0a, 0x0e, 0x6f, 0x6e, 0x6c, 0x79, 0x68, 0x69, 0x67, 0x68, 0x72, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x6f, 0x6e, 0x6c, 0x79, 0x68, 0x69, 0x67,
	0x68, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x22, 0x3a, 0x0a, 0x10, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x05, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x2e, 0x42, 0x6f, 0x6f,
	0x6b, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x05, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x22, 0x3d, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x05, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x2e, 0x42, 0x6f, 0x6f, 0x6b,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x05, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x22, 0x3a, 0x0a, 0x12,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x24, 0x0a, 0x04, 0x62, 0x6f, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x52, 0x04, 0x62, 0x6f, 0x6f, 0x6b, 0x22, 0x37, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x42,
	0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x04, 0x62,
	0x6f, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x62, 0x6f, 0x6f, 0x6b,
	0x73, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x04, 0x62, 0x6f, 0x6f,
	0x6b, 0x22, 0x40, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x42, 0x79, 0x47, 0x65,
	0x6e, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x05, 0x62,
	0x6f, 0x6f, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x62, 0x6f, 0x6f,
	0x6b, 0x73, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x05, 0x62, 0x6f,
	0x6f, 0x6b, 0x73, 0x22, 0xce, 0x03, 0x0a, 0x09, 0x42, 0x6f, 0x6f, 0x6b, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x69,
	0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x6c, 0x69, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x70,
	0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x69,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x70, 0x61, 0x74,
	0x68, 0x12, 0x2e, 0x0a, 0x07, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x73, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x73, 0x2e, 0x41, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x07, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x73, 0x12, 0x31, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x2e, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x12, 0x28, 0x0a, 0x05, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x6e,
	0x72, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x05, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06,
	0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x72, 0x69, 0x74, 0x74, 0x65, 0x6e, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x77, 0x72, 0x69, 0x74, 0x74, 0x65, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70,
	0x61, 0x67, 0x65, 0x73, 0x32, 0xc2, 0x06, 0x0a, 0x04, 0x42, 0x6f, 0x6f, 0x6b, 0x12, 0x96, 0x01,
	0x0a, 0x08, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x6f, 0x6f, 0x6b, 0x12, 0x16, 0x2e, 0x62, 0x6f, 0x6f,
	0x6b, 0x73, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x17, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x42,
	0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x59, 0x92, 0x41, 0x3d,
	0x12, 0x12, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x62, 0x6f, 0x6f, 0x6b, 0x20, 0x62, 0x79, 0x20, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x1a, 0x27, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x65, 0x73, 0x20, 0x62,
	0x6f, 0x6f, 0x6b, 0x73, 0x20, 0x62, 0x79, 0x20, 0x71, 0x75, 0x65, 0x72, 0x79, 0x20, 0x77, 0x69,
	0x74, 0x68, 0x20, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x13, 0x12, 0x11, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x6f, 0x6f,
	0x6b, 0x2f, 0x66, 0x69, 0x6e, 0x64, 0x12, 0xc2, 0x01, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x12, 0x18, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x19, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x6f,
	0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7f, 0x92, 0x41, 0x65, 0x12,
	0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20, 0x62, 0x6f, 0x6f, 0x6b, 0x1a, 0x48, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x20, 0x6e, 0x65, 0x77, 0x20, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x20, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x20, 0x6f, 0x6e, 0x6c, 0x79, 0x20, 0x66,
	0x6f, 0x72, 0x20, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x20, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x20, 0x72,
	0x69, 0x67, 0x68, 0x74, 0x73, 0x2e, 0x62, 0x0c, 0x0a, 0x0a, 0x0a, 0x06, 0x62, 0x65, 0x61, 0x72,
	0x65, 0x72, 0x12, 0x00, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x3a, 0x01, 0x2a, 0x22, 0x0c, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x6f, 0x6f, 0x6b, 0x12, 0x83, 0x01, 0x0a, 0x07,
	0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x12, 0x15, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x49, 0x92, 0x41, 0x32, 0x12, 0x0e, 0x47, 0x65, 0x74,
	0x20, 0x62, 0x6f, 0x6f, 0x6b, 0x20, 0x62, 0x79, 0x20, 0x69, 0x64, 0x1a, 0x20, 0x47, 0x65, 0x74,
	0x73, 0x20, 0x62, 0x6f, 0x6f, 0x6b, 0x20, 0x62, 0x79, 0x20, 0x69, 0x64, 0x20, 0x6f, 0x72, 0x20,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x69, 0x74, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x0e, 0x12, 0x0c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x6f, 0x6f,
	0x6b, 0x12, 0xb7, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x42, 0x79, 0x47,
	0x65, 0x6e, 0x72, 0x65, 0x12, 0x1c, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x42, 0x6f, 0x6f, 0x6b, 0x42, 0x79, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6f,
	0x6f, 0x6b, 0x42, 0x79, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x68, 0x92, 0x41, 0x4b, 0x12, 0x11, 0x47, 0x65, 0x74, 0x20, 0x62, 0x6f, 0x6f, 0x6b,
	0x20, 0x62, 0x79, 0x20, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x1a, 0x36, 0x47, 0x65, 0x74, 0x73, 0x20,
	0x62, 0x6f, 0x6f, 0x6b, 0x20, 0x62, 0x79, 0x20, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x20, 0x69, 0x64,
	0x20, 0x6f, 0x72, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x69, 0x74, 0x20, 0x6e, 0x61, 0x6d,
	0x65, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x12, 0x12, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x62, 0x6f, 0x6f, 0x6b, 0x2f, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x12, 0x9b, 0x01, 0x0a, 0x0b,
	0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x2e, 0x62, 0x6f,
	0x6f, 0x6b, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x55, 0x92, 0x41, 0x39, 0x12, 0x11, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x73, 0x20, 0x6c, 0x69, 0x73, 0x74, 0x1a, 0x24, 0x47, 0x65, 0x74, 0x20,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x73, 0x20, 0x62, 0x79, 0x20, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x12, 0x11, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x62, 0x6f, 0x6f, 0x6b, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x3a, 0x5a, 0x38, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x72,
	0x73, 0x65, 0x64, 0x2f, 0x4c, 0x69, 0x74, 0x47, 0x4f, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x3b, 0x62, 0x6f, 0x6f,
	0x6b, 0x73, 0x5f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_books_book_service_proto_rawDescOnce sync.Once
	file_books_book_service_proto_rawDescData []byte
)

func file_books_book_service_proto_rawDescGZIP() []byte {
	file_books_book_service_proto_rawDescOnce.Do(func() {
		file_books_book_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_books_book_service_proto_rawDesc), len(file_books_book_service_proto_rawDesc)))
	})
	return file_books_book_service_proto_rawDescData
}

var file_books_book_service_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_books_book_service_proto_goTypes = []any{
	(*GetBookListRequest)(nil),     // 0: books.GetBookListRequest
	(*FindBookRequest)(nil),        // 1: books.FindBookRequest
	(*CreateBookRequest)(nil),      // 2: books.CreateBookRequest
	(*GetBookRequest)(nil),         // 3: books.GetBookRequest
	(*GetBookByGenreRequest)(nil),  // 4: books.GetBookByGenreRequest
	(*FindBookResponse)(nil),       // 5: books.FindBookResponse
	(*GetBookListResponse)(nil),    // 6: books.GetBookListResponse
	(*CreateBookResponse)(nil),     // 7: books.CreateBookResponse
	(*GetBookResponse)(nil),        // 8: books.GetBookResponse
	(*GetBookByGenreResponse)(nil), // 9: books.GetBookByGenreResponse
	(*BookModel)(nil),              // 10: books.BookModel
	(*authors.AuthorModel)(nil),    // 11: authors.AuthorModel
	(*genres.CategoryModel)(nil),   // 12: genres.CategoryModel
	(*genres.GenreModel)(nil),      // 13: genres.GenreModel
}
var file_books_book_service_proto_depIdxs = []int32{
	10, // 0: books.FindBookResponse.books:type_name -> books.BookModel
	10, // 1: books.GetBookListResponse.books:type_name -> books.BookModel
	10, // 2: books.CreateBookResponse.book:type_name -> books.BookModel
	10, // 3: books.GetBookResponse.book:type_name -> books.BookModel
	10, // 4: books.GetBookByGenreResponse.books:type_name -> books.BookModel
	11, // 5: books.BookModel.authors:type_name -> authors.AuthorModel
	12, // 6: books.BookModel.category:type_name -> genres.CategoryModel
	13, // 7: books.BookModel.genre:type_name -> genres.GenreModel
	1,  // 8: books.Book.FindBook:input_type -> books.FindBookRequest
	2,  // 9: books.Book.CreateBook:input_type -> books.CreateBookRequest
	3,  // 10: books.Book.GetBook:input_type -> books.GetBookRequest
	4,  // 11: books.Book.GetBookByGenre:input_type -> books.GetBookByGenreRequest
	0,  // 12: books.Book.GetBookList:input_type -> books.GetBookListRequest
	5,  // 13: books.Book.FindBook:output_type -> books.FindBookResponse
	7,  // 14: books.Book.CreateBook:output_type -> books.CreateBookResponse
	8,  // 15: books.Book.GetBook:output_type -> books.GetBookResponse
	9,  // 16: books.Book.GetBookByGenre:output_type -> books.GetBookByGenreResponse
	6,  // 17: books.Book.GetBookList:output_type -> books.GetBookListResponse
	13, // [13:18] is the sub-list for method output_type
	8,  // [8:13] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_books_book_service_proto_init() }
func file_books_book_service_proto_init() {
	if File_books_book_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_books_book_service_proto_rawDesc), len(file_books_book_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_books_book_service_proto_goTypes,
		DependencyIndexes: file_books_book_service_proto_depIdxs,
		MessageInfos:      file_books_book_service_proto_msgTypes,
	}.Build()
	File_books_book_service_proto = out.File
	file_books_book_service_proto_goTypes = nil
	file_books_book_service_proto_depIdxs = nil
}
